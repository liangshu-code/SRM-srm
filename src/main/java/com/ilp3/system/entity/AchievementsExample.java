package com.ilp3.system.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AchievementsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievements
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievements
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievements
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public AchievementsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievements
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andAchievementsIdIsNull() {
            addCriterion("achievements_id is null");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdIsNotNull() {
            addCriterion("achievements_id is not null");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdEqualTo(Integer value) {
            addCriterion("achievements_id =", value, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdNotEqualTo(Integer value) {
            addCriterion("achievements_id <>", value, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdGreaterThan(Integer value) {
            addCriterion("achievements_id >", value, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("achievements_id >=", value, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdLessThan(Integer value) {
            addCriterion("achievements_id <", value, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdLessThanOrEqualTo(Integer value) {
            addCriterion("achievements_id <=", value, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdIn(List<Integer> values) {
            addCriterion("achievements_id in", values, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdNotIn(List<Integer> values) {
            addCriterion("achievements_id not in", values, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdBetween(Integer value1, Integer value2) {
            addCriterion("achievements_id between", value1, value2, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andAchievementsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("achievements_id not between", value1, value2, "achievementsId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNull() {
            addCriterion("supplier_id is null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNotNull() {
            addCriterion("supplier_id is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdEqualTo(Integer value) {
            addCriterion("supplier_id =", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotEqualTo(Integer value) {
            addCriterion("supplier_id <>", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThan(Integer value) {
            addCriterion("supplier_id >", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("supplier_id >=", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThan(Integer value) {
            addCriterion("supplier_id <", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThanOrEqualTo(Integer value) {
            addCriterion("supplier_id <=", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIn(List<Integer> values) {
            addCriterion("supplier_id in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotIn(List<Integer> values) {
            addCriterion("supplier_id not in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id not between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameIsNull() {
            addCriterion("achievements_name is null");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameIsNotNull() {
            addCriterion("achievements_name is not null");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameEqualTo(String value) {
            addCriterion("achievements_name =", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameNotEqualTo(String value) {
            addCriterion("achievements_name <>", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameGreaterThan(String value) {
            addCriterion("achievements_name >", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameGreaterThanOrEqualTo(String value) {
            addCriterion("achievements_name >=", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameLessThan(String value) {
            addCriterion("achievements_name <", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameLessThanOrEqualTo(String value) {
            addCriterion("achievements_name <=", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameLike(String value) {
            addCriterion("achievements_name like", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameNotLike(String value) {
            addCriterion("achievements_name not like", value, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameIn(List<String> values) {
            addCriterion("achievements_name in", values, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameNotIn(List<String> values) {
            addCriterion("achievements_name not in", values, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameBetween(String value1, String value2) {
            addCriterion("achievements_name between", value1, value2, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andAchievementsNameNotBetween(String value1, String value2) {
            addCriterion("achievements_name not between", value1, value2, "achievementsName");
            return (Criteria) this;
        }

        public Criteria andWeightIsNull() {
            addCriterion("weight is null");
            return (Criteria) this;
        }

        public Criteria andWeightIsNotNull() {
            addCriterion("weight is not null");
            return (Criteria) this;
        }

        public Criteria andWeightEqualTo(Float value) {
            addCriterion("weight =", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotEqualTo(Float value) {
            addCriterion("weight <>", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThan(Float value) {
            addCriterion("weight >", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightGreaterThanOrEqualTo(Float value) {
            addCriterion("weight >=", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightLessThan(Float value) {
            addCriterion("weight <", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightLessThanOrEqualTo(Float value) {
            addCriterion("weight <=", value, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightIn(List<Float> values) {
            addCriterion("weight in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotIn(List<Float> values) {
            addCriterion("weight not in", values, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightBetween(Float value1, Float value2) {
            addCriterion("weight between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andWeightNotBetween(Float value1, Float value2) {
            addCriterion("weight not between", value1, value2, "weight");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateIsNull() {
            addCriterion("user_id_create is null");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateIsNotNull() {
            addCriterion("user_id_create is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateEqualTo(Integer value) {
            addCriterion("user_id_create =", value, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateNotEqualTo(Integer value) {
            addCriterion("user_id_create <>", value, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateGreaterThan(Integer value) {
            addCriterion("user_id_create >", value, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id_create >=", value, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateLessThan(Integer value) {
            addCriterion("user_id_create <", value, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateLessThanOrEqualTo(Integer value) {
            addCriterion("user_id_create <=", value, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateIn(List<Integer> values) {
            addCriterion("user_id_create in", values, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateNotIn(List<Integer> values) {
            addCriterion("user_id_create not in", values, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateBetween(Integer value1, Integer value2) {
            addCriterion("user_id_create between", value1, value2, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andUserIdCreateNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id_create not between", value1, value2, "userIdCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterionForJDBCDate("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterionForJDBCDate("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterionForJDBCDate("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterionForJDBCDate("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andTotalcountIsNull() {
            addCriterion("totalcount is null");
            return (Criteria) this;
        }

        public Criteria andTotalcountIsNotNull() {
            addCriterion("totalcount is not null");
            return (Criteria) this;
        }

        public Criteria andTotalcountEqualTo(Integer value) {
            addCriterion("totalcount =", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountNotEqualTo(Integer value) {
            addCriterion("totalcount <>", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountGreaterThan(Integer value) {
            addCriterion("totalcount >", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("totalcount >=", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountLessThan(Integer value) {
            addCriterion("totalcount <", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountLessThanOrEqualTo(Integer value) {
            addCriterion("totalcount <=", value, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountIn(List<Integer> values) {
            addCriterion("totalcount in", values, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountNotIn(List<Integer> values) {
            addCriterion("totalcount not in", values, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountBetween(Integer value1, Integer value2) {
            addCriterion("totalcount between", value1, value2, "totalcount");
            return (Criteria) this;
        }

        public Criteria andTotalcountNotBetween(Integer value1, Integer value2) {
            addCriterion("totalcount not between", value1, value2, "totalcount");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("score is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("score is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(String value) {
            addCriterion("score =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(String value) {
            addCriterion("score <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(String value) {
            addCriterion("score >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(String value) {
            addCriterion("score >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(String value) {
            addCriterion("score <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(String value) {
            addCriterion("score <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLike(String value) {
            addCriterion("score like", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotLike(String value) {
            addCriterion("score not like", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<String> values) {
            addCriterion("score in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<String> values) {
            addCriterion("score not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(String value1, String value2) {
            addCriterion("score between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(String value1, String value2) {
            addCriterion("score not between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeIsNull() {
            addCriterion("achieve_type is null");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeIsNotNull() {
            addCriterion("achieve_type is not null");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeEqualTo(Integer value) {
            addCriterion("achieve_type =", value, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeNotEqualTo(Integer value) {
            addCriterion("achieve_type <>", value, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeGreaterThan(Integer value) {
            addCriterion("achieve_type >", value, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("achieve_type >=", value, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeLessThan(Integer value) {
            addCriterion("achieve_type <", value, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeLessThanOrEqualTo(Integer value) {
            addCriterion("achieve_type <=", value, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeIn(List<Integer> values) {
            addCriterion("achieve_type in", values, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeNotIn(List<Integer> values) {
            addCriterion("achieve_type not in", values, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeBetween(Integer value1, Integer value2) {
            addCriterion("achieve_type between", value1, value2, "achieveType");
            return (Criteria) this;
        }

        public Criteria andAchieveTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("achieve_type not between", value1, value2, "achieveType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievements
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievements
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}