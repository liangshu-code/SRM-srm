package com.ilp3.system.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AchievementDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public AchievementDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andAchievementsDetailIdIsNull() {
            addCriterion("achievements_detail_id is null");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdIsNotNull() {
            addCriterion("achievements_detail_id is not null");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdEqualTo(Integer value) {
            addCriterion("achievements_detail_id =", value, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdNotEqualTo(Integer value) {
            addCriterion("achievements_detail_id <>", value, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdGreaterThan(Integer value) {
            addCriterion("achievements_detail_id >", value, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("achievements_detail_id >=", value, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdLessThan(Integer value) {
            addCriterion("achievements_detail_id <", value, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdLessThanOrEqualTo(Integer value) {
            addCriterion("achievements_detail_id <=", value, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdIn(List<Integer> values) {
            addCriterion("achievements_detail_id in", values, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdNotIn(List<Integer> values) {
            addCriterion("achievements_detail_id not in", values, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdBetween(Integer value1, Integer value2) {
            addCriterion("achievements_detail_id between", value1, value2, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andAchievementsDetailIdNotBetween(Integer value1, Integer value2) {
            addCriterion("achievements_detail_id not between", value1, value2, "achievementsDetailId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNull() {
            addCriterion("supplier_id is null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIsNotNull() {
            addCriterion("supplier_id is not null");
            return (Criteria) this;
        }

        public Criteria andSupplierIdEqualTo(Integer value) {
            addCriterion("supplier_id =", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotEqualTo(Integer value) {
            addCriterion("supplier_id <>", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThan(Integer value) {
            addCriterion("supplier_id >", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("supplier_id >=", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThan(Integer value) {
            addCriterion("supplier_id <", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdLessThanOrEqualTo(Integer value) {
            addCriterion("supplier_id <=", value, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdIn(List<Integer> values) {
            addCriterion("supplier_id in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotIn(List<Integer> values) {
            addCriterion("supplier_id not in", values, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andSupplierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("supplier_id not between", value1, value2, "supplierId");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesIsNull() {
            addCriterion("qualified_batches is null");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesIsNotNull() {
            addCriterion("qualified_batches is not null");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesEqualTo(Integer value) {
            addCriterion("qualified_batches =", value, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesNotEqualTo(Integer value) {
            addCriterion("qualified_batches <>", value, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesGreaterThan(Integer value) {
            addCriterion("qualified_batches >", value, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesGreaterThanOrEqualTo(Integer value) {
            addCriterion("qualified_batches >=", value, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesLessThan(Integer value) {
            addCriterion("qualified_batches <", value, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesLessThanOrEqualTo(Integer value) {
            addCriterion("qualified_batches <=", value, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesIn(List<Integer> values) {
            addCriterion("qualified_batches in", values, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesNotIn(List<Integer> values) {
            addCriterion("qualified_batches not in", values, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesBetween(Integer value1, Integer value2) {
            addCriterion("qualified_batches between", value1, value2, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andQualifiedBatchesNotBetween(Integer value1, Integer value2) {
            addCriterion("qualified_batches not between", value1, value2, "qualifiedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesIsNull() {
            addCriterion("total_feed_batches is null");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesIsNotNull() {
            addCriterion("total_feed_batches is not null");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesEqualTo(Integer value) {
            addCriterion("total_feed_batches =", value, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesNotEqualTo(Integer value) {
            addCriterion("total_feed_batches <>", value, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesGreaterThan(Integer value) {
            addCriterion("total_feed_batches >", value, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_feed_batches >=", value, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesLessThan(Integer value) {
            addCriterion("total_feed_batches <", value, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesLessThanOrEqualTo(Integer value) {
            addCriterion("total_feed_batches <=", value, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesIn(List<Integer> values) {
            addCriterion("total_feed_batches in", values, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesNotIn(List<Integer> values) {
            addCriterion("total_feed_batches not in", values, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesBetween(Integer value1, Integer value2) {
            addCriterion("total_feed_batches between", value1, value2, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andTotalFeedBatchesNotBetween(Integer value1, Integer value2) {
            addCriterion("total_feed_batches not between", value1, value2, "totalFeedBatches");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnIsNull() {
            addCriterion("material_return is null");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnIsNotNull() {
            addCriterion("material_return is not null");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnEqualTo(Integer value) {
            addCriterion("material_return =", value, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnNotEqualTo(Integer value) {
            addCriterion("material_return <>", value, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnGreaterThan(Integer value) {
            addCriterion("material_return >", value, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnGreaterThanOrEqualTo(Integer value) {
            addCriterion("material_return >=", value, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnLessThan(Integer value) {
            addCriterion("material_return <", value, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnLessThanOrEqualTo(Integer value) {
            addCriterion("material_return <=", value, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnIn(List<Integer> values) {
            addCriterion("material_return in", values, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnNotIn(List<Integer> values) {
            addCriterion("material_return not in", values, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnBetween(Integer value1, Integer value2) {
            addCriterion("material_return between", value1, value2, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andMaterialReturnNotBetween(Integer value1, Integer value2) {
            addCriterion("material_return not between", value1, value2, "materialReturn");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeIsNull() {
            addCriterion("delivery_on_time is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeIsNotNull() {
            addCriterion("delivery_on_time is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeEqualTo(Integer value) {
            addCriterion("delivery_on_time =", value, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeNotEqualTo(Integer value) {
            addCriterion("delivery_on_time <>", value, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeGreaterThan(Integer value) {
            addCriterion("delivery_on_time >", value, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("delivery_on_time >=", value, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeLessThan(Integer value) {
            addCriterion("delivery_on_time <", value, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeLessThanOrEqualTo(Integer value) {
            addCriterion("delivery_on_time <=", value, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeIn(List<Integer> values) {
            addCriterion("delivery_on_time in", values, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeNotIn(List<Integer> values) {
            addCriterion("delivery_on_time not in", values, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeBetween(Integer value1, Integer value2) {
            addCriterion("delivery_on_time between", value1, value2, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryOnTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("delivery_on_time not between", value1, value2, "deliveryOnTime");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoIsNull() {
            addCriterion("submit_info is null");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoIsNotNull() {
            addCriterion("submit_info is not null");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoEqualTo(Integer value) {
            addCriterion("submit_info =", value, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoNotEqualTo(Integer value) {
            addCriterion("submit_info <>", value, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoGreaterThan(Integer value) {
            addCriterion("submit_info >", value, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoGreaterThanOrEqualTo(Integer value) {
            addCriterion("submit_info >=", value, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoLessThan(Integer value) {
            addCriterion("submit_info <", value, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoLessThanOrEqualTo(Integer value) {
            addCriterion("submit_info <=", value, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoIn(List<Integer> values) {
            addCriterion("submit_info in", values, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoNotIn(List<Integer> values) {
            addCriterion("submit_info not in", values, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoBetween(Integer value1, Integer value2) {
            addCriterion("submit_info between", value1, value2, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andSubmitInfoNotBetween(Integer value1, Integer value2) {
            addCriterion("submit_info not between", value1, value2, "submitInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoIsNull() {
            addCriterion("order_reply_info is null");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoIsNotNull() {
            addCriterion("order_reply_info is not null");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoEqualTo(Integer value) {
            addCriterion("order_reply_info =", value, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoNotEqualTo(Integer value) {
            addCriterion("order_reply_info <>", value, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoGreaterThan(Integer value) {
            addCriterion("order_reply_info >", value, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_reply_info >=", value, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoLessThan(Integer value) {
            addCriterion("order_reply_info <", value, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoLessThanOrEqualTo(Integer value) {
            addCriterion("order_reply_info <=", value, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoIn(List<Integer> values) {
            addCriterion("order_reply_info in", values, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoNotIn(List<Integer> values) {
            addCriterion("order_reply_info not in", values, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoBetween(Integer value1, Integer value2) {
            addCriterion("order_reply_info between", value1, value2, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andOrderReplyInfoNotBetween(Integer value1, Integer value2) {
            addCriterion("order_reply_info not between", value1, value2, "orderReplyInfo");
            return (Criteria) this;
        }

        public Criteria andPricePositionIsNull() {
            addCriterion("price_position is null");
            return (Criteria) this;
        }

        public Criteria andPricePositionIsNotNull() {
            addCriterion("price_position is not null");
            return (Criteria) this;
        }

        public Criteria andPricePositionEqualTo(Integer value) {
            addCriterion("price_position =", value, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionNotEqualTo(Integer value) {
            addCriterion("price_position <>", value, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionGreaterThan(Integer value) {
            addCriterion("price_position >", value, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionGreaterThanOrEqualTo(Integer value) {
            addCriterion("price_position >=", value, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionLessThan(Integer value) {
            addCriterion("price_position <", value, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionLessThanOrEqualTo(Integer value) {
            addCriterion("price_position <=", value, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionIn(List<Integer> values) {
            addCriterion("price_position in", values, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionNotIn(List<Integer> values) {
            addCriterion("price_position not in", values, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionBetween(Integer value1, Integer value2) {
            addCriterion("price_position between", value1, value2, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andPricePositionNotBetween(Integer value1, Integer value2) {
            addCriterion("price_position not between", value1, value2, "pricePosition");
            return (Criteria) this;
        }

        public Criteria andKnotScoreIsNull() {
            addCriterion("knot_score is null");
            return (Criteria) this;
        }

        public Criteria andKnotScoreIsNotNull() {
            addCriterion("knot_score is not null");
            return (Criteria) this;
        }

        public Criteria andKnotScoreEqualTo(Integer value) {
            addCriterion("knot_score =", value, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreNotEqualTo(Integer value) {
            addCriterion("knot_score <>", value, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreGreaterThan(Integer value) {
            addCriterion("knot_score >", value, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("knot_score >=", value, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreLessThan(Integer value) {
            addCriterion("knot_score <", value, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreLessThanOrEqualTo(Integer value) {
            addCriterion("knot_score <=", value, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreIn(List<Integer> values) {
            addCriterion("knot_score in", values, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreNotIn(List<Integer> values) {
            addCriterion("knot_score not in", values, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreBetween(Integer value1, Integer value2) {
            addCriterion("knot_score between", value1, value2, "knotScore");
            return (Criteria) this;
        }

        public Criteria andKnotScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("knot_score not between", value1, value2, "knotScore");
            return (Criteria) this;
        }

        public Criteria andAttitudeIsNull() {
            addCriterion("attitude is null");
            return (Criteria) this;
        }

        public Criteria andAttitudeIsNotNull() {
            addCriterion("attitude is not null");
            return (Criteria) this;
        }

        public Criteria andAttitudeEqualTo(Integer value) {
            addCriterion("attitude =", value, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeNotEqualTo(Integer value) {
            addCriterion("attitude <>", value, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeGreaterThan(Integer value) {
            addCriterion("attitude >", value, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeGreaterThanOrEqualTo(Integer value) {
            addCriterion("attitude >=", value, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeLessThan(Integer value) {
            addCriterion("attitude <", value, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeLessThanOrEqualTo(Integer value) {
            addCriterion("attitude <=", value, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeIn(List<Integer> values) {
            addCriterion("attitude in", values, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeNotIn(List<Integer> values) {
            addCriterion("attitude not in", values, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeBetween(Integer value1, Integer value2) {
            addCriterion("attitude between", value1, value2, "attitude");
            return (Criteria) this;
        }

        public Criteria andAttitudeNotBetween(Integer value1, Integer value2) {
            addCriterion("attitude not between", value1, value2, "attitude");
            return (Criteria) this;
        }

        public Criteria andExReplyIsNull() {
            addCriterion("ex_reply is null");
            return (Criteria) this;
        }

        public Criteria andExReplyIsNotNull() {
            addCriterion("ex_reply is not null");
            return (Criteria) this;
        }

        public Criteria andExReplyEqualTo(Integer value) {
            addCriterion("ex_reply =", value, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyNotEqualTo(Integer value) {
            addCriterion("ex_reply <>", value, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyGreaterThan(Integer value) {
            addCriterion("ex_reply >", value, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyGreaterThanOrEqualTo(Integer value) {
            addCriterion("ex_reply >=", value, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyLessThan(Integer value) {
            addCriterion("ex_reply <", value, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyLessThanOrEqualTo(Integer value) {
            addCriterion("ex_reply <=", value, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyIn(List<Integer> values) {
            addCriterion("ex_reply in", values, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyNotIn(List<Integer> values) {
            addCriterion("ex_reply not in", values, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyBetween(Integer value1, Integer value2) {
            addCriterion("ex_reply between", value1, value2, "exReply");
            return (Criteria) this;
        }

        public Criteria andExReplyNotBetween(Integer value1, Integer value2) {
            addCriterion("ex_reply not between", value1, value2, "exReply");
            return (Criteria) this;
        }

        public Criteria andExDoneIsNull() {
            addCriterion("ex_done is null");
            return (Criteria) this;
        }

        public Criteria andExDoneIsNotNull() {
            addCriterion("ex_done is not null");
            return (Criteria) this;
        }

        public Criteria andExDoneEqualTo(Integer value) {
            addCriterion("ex_done =", value, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneNotEqualTo(Integer value) {
            addCriterion("ex_done <>", value, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneGreaterThan(Integer value) {
            addCriterion("ex_done >", value, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneGreaterThanOrEqualTo(Integer value) {
            addCriterion("ex_done >=", value, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneLessThan(Integer value) {
            addCriterion("ex_done <", value, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneLessThanOrEqualTo(Integer value) {
            addCriterion("ex_done <=", value, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneIn(List<Integer> values) {
            addCriterion("ex_done in", values, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneNotIn(List<Integer> values) {
            addCriterion("ex_done not in", values, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneBetween(Integer value1, Integer value2) {
            addCriterion("ex_done between", value1, value2, "exDone");
            return (Criteria) this;
        }

        public Criteria andExDoneNotBetween(Integer value1, Integer value2) {
            addCriterion("ex_done not between", value1, value2, "exDone");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyIsNull() {
            addCriterion("refuse_reply is null");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyIsNotNull() {
            addCriterion("refuse_reply is not null");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyEqualTo(Integer value) {
            addCriterion("refuse_reply =", value, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyNotEqualTo(Integer value) {
            addCriterion("refuse_reply <>", value, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyGreaterThan(Integer value) {
            addCriterion("refuse_reply >", value, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyGreaterThanOrEqualTo(Integer value) {
            addCriterion("refuse_reply >=", value, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyLessThan(Integer value) {
            addCriterion("refuse_reply <", value, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyLessThanOrEqualTo(Integer value) {
            addCriterion("refuse_reply <=", value, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyIn(List<Integer> values) {
            addCriterion("refuse_reply in", values, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyNotIn(List<Integer> values) {
            addCriterion("refuse_reply not in", values, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyBetween(Integer value1, Integer value2) {
            addCriterion("refuse_reply between", value1, value2, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andRefuseReplyNotBetween(Integer value1, Integer value2) {
            addCriterion("refuse_reply not between", value1, value2, "refuseReply");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterionForJDBCDate("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterionForJDBCDate("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterionForJDBCDate("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterionForJDBCDate("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievement_detail
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table achievement_detail
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}